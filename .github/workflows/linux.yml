name: Linux
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    container: ghcr.io/hybridgroup/opencv:4.10.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run tests
        run: go test -v -coverprofile=/tmp/coverage.out -count=1 ./...
      - name: Check code coverage
        run: |
          go tool cover -html=/tmp/coverage.out -o /tmp/coverage.html
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: /tmp/*.html

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Build amd64
        run: |
          docker pull --platform linux/amd64 ghcr.io/wasmvision/wasmvision-builder:build-static-image
          mkdir -p build
          mkdir -p build/amd64
          docker run --rm -v $(pwd):/src -v $(pwd)/build/amd64:/build -a stdout -a stderr --platform linux/amd64 ghcr.io/wasmvision/wasmvision-builder:build-static-image
          sudo chmod +x build/amd64/wasmvision
      - name: Archive amd64 binary
        uses: actions/upload-artifact@v4
        with:
          name: wasmvision-linux-amd64
          path: build/amd64/wasmvision
      - name: Build arm64
        run: |
          docker pull --platform linux/arm64 ghcr.io/wasmvision/wasmvision-builder:build-static-image
          mkdir -p build/arm64
          docker run --rm -v $(pwd):/src -v $(pwd)/build/arm64:/build -a stdout -a stderr --platform linux/arm64 ghcr.io/wasmvision/wasmvision-builder:build-static-image
          sudo chmod +x build/arm64/wasmvision
      - name: Archive arm64 binary
        uses: actions/upload-artifact@v4
        with:
          name: wasmvision-linux-arm64
          path: build/arm64/wasmvision
